{"remainingRequest":"/Users/luochang/Desktop/vue3-project/node_modules/thread-loader/dist/cjs.js!/Users/luochang/Desktop/vue3-project/node_modules/babel-loader/lib/index.js!/Users/luochang/Desktop/vue3-project/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/luochang/Desktop/vue3-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luochang/Desktop/vue3-project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/luochang/Desktop/vue3-project/src/views/layout/NavSide.vue?vue&type=template&id=2cf7c6f5&scoped=true","dependencies":[{"path":"/Users/luochang/Desktop/vue3-project/src/views/layout/NavSide.vue","mtime":1631615155857},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":1615864461891},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/thread-loader/dist/cjs.js","mtime":1615864461892},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/babel-loader/lib/index.js","mtime":1615864461876},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1631523068699},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":1615864461891},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/vue-loader-v16/dist/index.js","mtime":1631523068699}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIG5vcm1hbGl6ZUNsYXNzIGFzIF9ub3JtYWxpemVDbGFzcywgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB2U2hvdyBhcyBfdlNob3csIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMmNmN2M2ZjUiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYXNpZGUtd3JhcHBlciIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJzdWItdGl0bGUiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAibmF2LWZvb3QiCn07CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9lbF9tZW51X2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtbWVudS1pdGVtIik7CgogIHZhciBfY29tcG9uZW50X2VsX21lbnVfaXRlbV9ncm91cCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1tZW51LWl0ZW0tZ3JvdXAiKTsKCiAgdmFyIF9jb21wb25lbnRfZWxfc3ViX21lbnUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtc3ViLW1lbnUiKTsKCiAgdmFyIF9jb21wb25lbnRfZWxfbWVudSA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1tZW51Iik7CgogIHJldHVybiBfd2l0aERpcmVjdGl2ZXMoKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiYXNpZGUiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyh7CiAgICAgICduYXYtYXNpZGUnOiB0cnVlLAogICAgICBjb2xsYXBzZTogX2N0eC5jb2xsYXBzZWQKICAgIH0pCiAgfSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX21lbnUsIHsKICAgIGNsYXNzOiAibWVudS12ZXJ0aWNhbCIsCiAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjZmZmIiwKICAgICJ0ZXh0LWNvbG9yIjogIiMxMDEwMTAiLAogICAgImFjdGl2ZS10ZXh0LWNvbG9yIjogIiM0MzdCRUUiLAogICAgImRlZmF1bHQtYWN0aXZlIjogX2N0eC5kZWZhdWx0QWN0aXZlZFN1Ym1lbnUsCiAgICAiY29sbGFwc2UtdHJhbnNpdGlvbiI6IGZhbHNlLAogICAgY29sbGFwc2U6IF9jdHguY29sbGFwc2VkLAogICAgb25TZWxlY3Q6IF9jdHguaGFuZGxlQ2xpY2tNZW51SXRlbQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KF9jdHguc3VibWVudUxpc3QsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtpdGVtLmNoaWxkcmVuICYmIGl0ZW0uY2hpbGRyZW4ubGVuZ3RoID4gMCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX3N1Yl9tZW51LCB7CiAgICAgICAgICBjbGFzczogInN1Yi1tZW51IiwKICAgICAgICAgIGluZGV4OiBpdGVtLmlkICsgJycsCiAgICAgICAgICBrZXk6IGl0ZW0uaWQKICAgICAgICB9LCB7CiAgICAgICAgICB0aXRsZTogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gW19jcmVhdGVFbGVtZW50Vk5vZGUoImkiLCB7CiAgICAgICAgICAgICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyhbJ2ljb25mb250JywgJ3N1Yi1tZW51LWljb24nLCBfY3R4Lm1lbnVJY29uc1tpdGVtLnRpdGxlXSA/IF9jdHgubWVudUljb25zW2l0ZW0udGl0bGVdIDogaXRlbS5pY29uXSkKICAgICAgICAgICAgfSwgbnVsbCwgMiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBfaG9pc3RlZF8yLCBfdG9EaXNwbGF5U3RyaW5nKGl0ZW0udGl0bGUpLCAxKV07CiAgICAgICAgICB9KSwKICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9tZW51X2l0ZW1fZ3JvdXAsIG51bGwsIHsKICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoaXRlbS5jaGlsZHJlbiwgZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX21lbnVfaXRlbSwgewogICAgICAgICAgICAgICAgICAgIGtleTogZWwuaWQsCiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IGVsLmlkICsgJycsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICJtZW51LWl0ZW0iCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoZWwudGl0bGUpLCAxKV07CiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsnaWNvbmZvbnQnLCBlbC5pY29uXSkKICAgICAgICAgICAgICAgICAgICAgIH0sIG51bGwsIDIpXTsKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBfOiAyCiAgICAgICAgICAgICAgICAgIH0sIDEwMzIsIFsiaW5kZXgiXSk7CiAgICAgICAgICAgICAgICB9KSwgMTI4KSldOwogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF86IDIKICAgICAgICAgICAgfSwgMTAyNCldOwogICAgICAgICAgfSksCiAgICAgICAgICBfOiAyCiAgICAgICAgfSwgMTAzMiwgWyJpbmRleCJdKSkgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9tZW51X2l0ZW0sIHsKICAgICAgICAgIGNsYXNzOiAibWVudS1pdGVtIiwKICAgICAgICAgIGtleTogaXRlbS5pZCwKICAgICAgICAgIGluZGV4OiBpdGVtLmlkICsgJycKICAgICAgICB9LCB7CiAgICAgICAgICB0aXRsZTogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZyhpdGVtLnRpdGxlKSwgMSldOwogICAgICAgICAgfSksCiAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgICAgICAgICAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsnaWNvbmZvbnQnLCBpdGVtLmljb25dKQogICAgICAgICAgICB9LCBudWxsLCAyKV07CiAgICAgICAgICB9KSwKICAgICAgICAgIF86IDIKICAgICAgICB9LCAxMDMyLCBbImluZGV4Il0pKV0sIDY0KTsKICAgICAgfSksIDI1NikpXTsKICAgIH0pLAogICAgXzogMQogIH0sIDgsIFsiZGVmYXVsdC1hY3RpdmUiLCAiY29sbGFwc2UiLCAib25TZWxlY3QiXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9jdHgudG9nZ2xlQ29sbGFwc2UgJiYgX2N0eC50b2dnbGVDb2xsYXBzZS5hcHBseShfY3R4LCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiBfbm9ybWFsaXplQ2xhc3MoWydpY29uZm9udCcsIF9jdHguY29sbGFwc2VkID8gJ2ljb25pY29uX2V4cGFuZCcgOiAnaWNvbmljb25fY29sbGFwc2UnXSkKICB9LCBudWxsLCAyKV0pXSldLCAyKV0sIDUxMikpLCBbW192U2hvdywgX2N0eC5zaG93TmF2U2lkZV1dKTsKfQ=="},null]}