{"remainingRequest":"/Users/luochang/Desktop/vue3-project/node_modules/thread-loader/dist/cjs.js!/Users/luochang/Desktop/vue3-project/node_modules/babel-loader/lib/index.js!/Users/luochang/Desktop/vue3-project/node_modules/ts-loader/index.js??ref--13-3!/Users/luochang/Desktop/vue3-project/src/store/modules/appStore/index.ts","dependencies":[{"path":"/Users/luochang/Desktop/vue3-project/src/store/modules/appStore/index.ts","mtime":1631781000394},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/cache-loader/dist/cjs.js","mtime":1615864461891},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/thread-loader/dist/cjs.js","mtime":1615864461892},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/babel-loader/lib/index.js","mtime":1615864461876},{"path":"/Users/luochang/Desktop/vue3-project/node_modules/ts-loader/index.js","mtime":1615864465705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}